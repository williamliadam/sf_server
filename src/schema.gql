# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BodyDetail {
  age: Int
  bmi: Int
  bmr: Int
  createdAt: DateTime!
  height: Int
  id: ID!
  tdee: Int
  updatedAt: DateTime!
  user: User!
  userId: Int!
  weight: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DishPlan {
  amount: Int!
  createdAt: DateTime!
  id: ID!
  mealPlanId: Int
  planCooker: User!
  planCookerId: Int!
  recipe: Recipe!
  recipeId: Int!
  updatedAt: DateTime!
  usedMealPlan: MealPlan
}

type DishTemplate {
  amount: Int!
  createdAt: DateTime!
  id: ID!
  mealTemplateId: Int
  recipe: Recipe!
  recipeId: Int!
  updatedAt: DateTime!
  usedMealTemplates: MealTemplate
}

enum Goal {
  BULKING
  KEEP
  SLIMING
}

type Ingredient {
  amount: Int!
  createdAt: DateTime!
  id: ID!
  materiaUnitId: Int!
  material: Material!
  materialId: Int!
  recipeId: Int
  unit: MateriaUnit!
  updatedAt: DateTime!
  usedRecipe: Recipe
}

type MateriaCategory {
  _count: MateriaCategoryCount!
  code: String!
  createdAt: DateTime!
  id: ID!
  last: MateriaCategory
  lastId: Int
  materials: [Material!]
  name: String!
  next: [MateriaCategory!]
  updatedAt: DateTime!
}

type MateriaCategoryCount {
  materials: Int!
  next: Int!
}

type MateriaUnit {
  _count: MateriaUnitCount!
  code: String!
  createdAt: DateTime!
  id: ID!
  ingredients: [Ingredient!]
  name: String!
  toKilo: Int!
  updatedAt: DateTime!
}

type MateriaUnitCount {
  ingredients: Int!
}

type Material {
  _count: MaterialCount!
  category: MateriaCategory!
  code: String!
  createdAt: DateTime!
  id: ID!
  ingredients: [Ingredient!]
  materiaCategoryId: Int!
  name: String!
  nickName: String!
  nutritionMatrix: [NutritionRow!]
  updatedAt: DateTime!
}

type MaterialCount {
  ingredients: Int!
  nutritionMatrix: Int!
}

type MealPlan {
  _count: MealPlanCount!
  createBy: User!
  createdAt: DateTime!
  dishPlans: [DishPlan!]
  id: ID!
  planTime: DateTime
  type: MealType!
  updatedAt: DateTime!
  userId: Int!
}

type MealPlanCount {
  dishPlans: Int!
}

type MealTemplate {
  _count: MealTemplateCount!
  createBy: User!
  createdAt: DateTime!
  dishTemplates: [DishTemplate!]
  id: ID!
  name: String!
  updatedAt: DateTime!
  userId: Int!
}

type MealTemplateCount {
  dishTemplates: Int!
}

enum MealType {
  BREAKFAST
  DINNER
  LUNCH
  MEAL
}

type Method {
  code: String!
  createdAt: DateTime!
  desc: String!
  id: ID!
  name: String!
  recipeId: Int
  updatedAt: DateTime!
  usedRecipe: Recipe
}

type Nutrition {
  _count: NutritionCount!
  code: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  updatedAt: DateTime!
  usedRow: [NutritionRow!]
}

type NutritionCount {
  usedRow: Int!
}

type NutritionRow {
  belongMaterial: Material!
  belongToId: Int!
  createdAt: DateTime!
  id: ID!
  nutirtion: Nutrition!
  nutirtionId: Int!
  percent: Int!
  updatedAt: DateTime!
}

type Post {
  author: User
  authorId: Int
  content: String
  createdAt: DateTime!
  follows: Int
  id: ID!
  published: Boolean
  stars: Int
  title: String!
  updatedAt: DateTime!
}

type Profile {
  avatar: String
  createdAt: DateTime!
  goal: Goal!
  id: ID!
  nickName: String
  updatedAt: DateTime!
  user: User!
  userId: Int!
}

type Query {
  getPosts: [Post!]
}

type Recipe {
  _count: RecipeCount!
  author: User!
  authorId: Int!
  createdAt: DateTime!
  id: ID!
  ingredients: [Ingredient!]
  methods: [Method!]
  name: String!
  stars: Int!
  updatedAt: DateTime!
  usedDishPlans: [DishPlan!]
  usedDishTemplates: [DishTemplate!]
}

type RecipeCount {
  ingredients: Int!
  methods: Int!
  usedDishPlans: Int!
  usedDishTemplates: Int!
}

enum Role {
  ADMIN
  USER
}

type User {
  _count: UserCount!
  bodyDetail: BodyDetail
  chargeDishPlans: [DishPlan!]
  createdAt: DateTime!
  email: String
  id: ID!
  myMealPlans: [MealPlan!]
  myMealTemplates: [MealTemplate!]
  myPosts: [Post!]
  myRecipes: [Recipe!]
  name: String
  password: String!
  phone: String
  profile: Profile
  role: Role!
  updatedAt: DateTime!
  wxId: String
}

type UserCount {
  chargeDishPlans: Int!
  myMealPlans: Int!
  myMealTemplates: Int!
  myPosts: Int!
  myRecipes: Int!
}